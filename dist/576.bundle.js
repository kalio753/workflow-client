"use strict";(self.webpackChunktask_1=self.webpackChunktask_1||[]).push([[576],{67255:(e,n,t)=>{t.r(n),t.d(n,{default:()=>y});var i=t(60414),c=t(95694),s=t(95169),o=(t(40312),t(80136),t(88464),t(88949)),a=t(84159),r=t(62465),l=t(19446),u=t(26584),d=t(95958),m=t(43228),x=t(74087),h=t(45694),j=t(10423),f=t(99486),k=t(56314),p=t(21745),g=t(85893),Z=function(e){return e.children},v={initial:{opacity:0},in:{opacity:1},out:{opacity:0}},w={type:"tween",ease:"linear",duration:.6},b=function(){var e=(0,i.useLocation)().pathname;return(0,g.jsx)(Z,{children:(0,g.jsx)(p.motion.div,{initial:"initial",animate:"in",variants:v,transition:w,children:(0,g.jsx)(i.Outlet,{})},e)})};const y=function(){var e=(0,k.parseJwt)((0,k.getToken)("_ttoauth")),n=function(){return(0,g.jsx)(i.Routes,{children:(0,g.jsxs)(i.Route,{element:(0,g.jsx)(b,{}),children:[(0,g.jsx)(i.Route,{path:"/u",element:(0,g.jsx)(o.Z,{})}),(0,g.jsx)(i.Route,{path:"/dagui",element:(0,g.jsx)(a.Z,{})}),(0,g.jsx)(i.Route,{path:"/guiden",element:(0,g.jsx)(r.Z,{})}),(0,g.jsx)(i.Route,{path:"/ud",element:(0,g.jsx)(u.Z,{})}),(0,g.jsx)(i.Route,{path:"/ut",element:(0,g.jsx)(l.Z,{})}),(0,g.jsx)(i.Route,{path:"/ue",element:(0,g.jsx)(d.Z,{})}),1==e.user_id&&(0,g.jsxs)(g.Fragment,{children:[(0,g.jsx)(i.Route,{exact:!0,path:"/dscc",element:(0,g.jsx)(x.Z,{})}),(0,g.jsx)(i.Route,{exact:!0,path:"/quanly_template",element:(0,g.jsx)(m.Z,{})}),(0,g.jsx)(i.Route,{path:"/vbct",element:(0,g.jsx)(h.Z,{})}),(0,g.jsx)(i.Route,{path:"/edit_template",element:(0,g.jsx)(h.Z,{})}),(0,g.jsx)(i.Route,{path:"/taoqt",element:(0,g.jsx)(j.Z,{})})]})]})})};return(0,g.jsx)("div",{className:"workflow-service",children:(0,g.jsxs)(c.Provider,{store:s.Z,children:[console.log(window.location.href.includes("workflowfe")),!1===window.location.href.includes("workflowfe")?n():(0,g.jsx)("div",{style:{display:"flex"},children:(0,g.jsxs)(i.BrowserRouter,{children:[(0,g.jsx)(f.default,{style:{flex:1}}),n()]})})]})})}},99486:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r}),t(28416);var i=t(97432),c=t(60414),s=t(52723),o=(t(76154),t(56314)),a=t(85893);i.Layout.Sider;const r=function(){var e=(0,o.parseJwt)((0,o.getToken)("_ttoauth"));function n(e,n,t,i){return{key:n,icon:t,children:i,label:e,className:n}}var t=!0===window.location.href.includes("workflowfe")?"":"/workflow-service";return(n((0,a.jsx)(c.Link,{to:"".concat(t,"/guiden"),onClick:function(){},children:"Công việc của tôi"}),"menu-item-11",(0,a.jsx)("img",{alt:"",className:"icon second-icon",src:s.mO})),n("Tài liệu của tôi","menu-item-2",(0,a.jsx)("img",{alt:"",className:"icon second-icon",src:s.Xk}),[n((0,a.jsx)(c.Link,{to:"".concat(t,"/u"),onClick:function(){},children:"Tạo mới"}),"menu-item-9"),n((0,a.jsx)(c.Link,{to:"".concat(t,"/dagui"),onClick:function(){},children:"Đã gửi"}),"menu-item-10")]),1==e.user_id&&n("Quản lý tài liệu","menu-item-4",(0,a.jsx)("img",{alt:"",className:"icon second-icon",src:s.$m}),[n((0,a.jsx)(c.Link,{to:"".concat(t,"/quanly_template"),onClick:function(){},children:"Danh sách tài liệu"}),"menu-item-7"),n((0,a.jsx)(c.Link,{to:"".concat(t,"/dscc"),onClick:function(){},children:"Quy trình vận hành"}),"menu-item-8")]),function(){return 1==e.user_id?[n("Quản lý tài liệu","menu-item-4",(0,a.jsx)("img",{alt:"",className:"icon second-icon",src:s.$m}),[n((0,a.jsx)(c.Link,{to:"".concat(t,"/quanly_template"),onClick:function(){},children:"Danh sách tài liệu"}),"menu-item-7"),n((0,a.jsx)(c.Link,{to:"".concat(t,"/dscc"),onClick:function(){},children:"Quy trình vận hành"}),"menu-item-8")])]:[n((0,a.jsx)(c.Link,{to:"".concat(t,"/guiden"),onClick:function(){},children:"Công việc của tôi"}),"menu-item-11",(0,a.jsx)("img",{alt:"",className:"icon second-icon",src:s.mO})),n("Tài liệu của tôi","menu-item-2",(0,a.jsx)("img",{alt:"",className:"icon second-icon",src:s.Xk}),[n((0,a.jsx)(c.Link,{to:"".concat(t,"/u"),children:"Tạo mới"}),"menu-item-9"),n((0,a.jsx)(c.Link,{to:"".concat(t,"/dagui"),children:"Đã gửi"}),"menu-item-10")])]})()}},95169:(e,n,t)=>{t.d(n,{Z:()=>k});var i=t(83317),c=t(77835),s=t(61194),o=t(34999),a=t(36154),r=t(73922),l=t(20182),u=t(34335),d=t(22210),m=t(77383),x=t(19019),h=t(3272),j=(0,c.ZP)(),f=(0,i.configureStore)({reducer:{template:s.ZP.reducer,folder:a.ZP.reducer,modalVisible:r.Z.reducer,fakeData:l.ZP.reducer,steps:u.ZP.reducer,refreshVariable:d.Z.reducer,globalVariable:m.ZP.reducer,documents:x.ZP.reducer,action:h.ZP.reducer},middleware:[j]});j.run(o.Z);const k=f},95883:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"images/a055d62b5e582b57b1f3664893d1922b-ArrDown.svg"},35501:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"images/a13154cd17972ac3c9b828b54ccf253e-ArrUp.svg"},49749:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"images/79e7fa1056d23c5bafcf8085a5e705b1-Close.svg"},11384:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"images/53fceb0e7914b2fcff1d7ec448381c97-Plus.svg"},35891:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"images/957a88b06e7fdbf470b48a16365afbbd-Upload.svg"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,